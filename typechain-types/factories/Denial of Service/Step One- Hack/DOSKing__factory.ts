/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DOSKing,
  DOSKingInterface,
} from "../../../Denial of Service/Step One- Hack/DOSKing";

const _abi = [
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimThrone",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "king",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061043b806100206000396000f3fe6080604052600436106100345760003560e01c806369deb7b714610039578063b69ef8a814610043578063cc181ca81461006e575b600080fd5b610041610099565b005b34801561004f57600080fd5b506100586101f6565b6040516100659190610239565b60405180910390f35b34801561007a57600080fd5b506100836101fc565b6040516100909190610295565b60405180910390f35b60015434116100dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d490610333565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660015460405161012690610384565b60006040518083038185875af1925050503d8060008114610163576040519150601f19603f3d011682016040523d82523d6000602084013e610168565b606091505b50509050806101ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a3906103e5565b60405180910390fd5b34600181905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b61023381610220565b82525050565b600060208201905061024e600083018461022a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061027f82610254565b9050919050565b61028f81610274565b82525050565b60006020820190506102aa6000830184610286565b92915050565b600082825260208201905092915050565b7f4e65656420746f20706179206d6f726520746f206265636f6d6520746865206b60008201527f696e670000000000000000000000000000000000000000000000000000000000602082015250565b600061031d6023836102b0565b9150610328826102c1565b604082019050919050565b6000602082019050818103600083015261034c81610310565b9050919050565b600081905092915050565b50565b600061036e600083610353565b91506103798261035e565b600082019050919050565b600061038f82610361565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b60006103cf6014836102b0565b91506103da82610399565b602082019050919050565b600060208201905081810360008301526103fe816103c2565b905091905056fea26469706673582212205d7a248ab1e5aedfb684c9e4f47c56ff4e2f2690e564e0cd78b3b645648a90bd64736f6c634300080f0033";

type DOSKingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DOSKingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DOSKing__factory extends ContractFactory {
  constructor(...args: DOSKingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DOSKing> {
    return super.deploy(overrides || {}) as Promise<DOSKing>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DOSKing {
    return super.attach(address) as DOSKing;
  }
  override connect(signer: Signer): DOSKing__factory {
    return super.connect(signer) as DOSKing__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DOSKingInterface {
    return new utils.Interface(_abi) as DOSKingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DOSKing {
    return new Contract(address, _abi, signerOrProvider) as DOSKing;
  }
}

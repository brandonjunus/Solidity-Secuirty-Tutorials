/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  HackDOSKing,
  HackDOSKingInterface,
} from "../../../Denial of Service/Step One- Hack/HackDOSKing";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_dosKingAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "becomeKing",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101ff3803806101ff833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b60e9806101166000396000f3fe608060405260043610601f5760003560e01c80636708cc6314602a576025565b36602557005b600080fd5b60306032565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369deb7b7346040518263ffffffff1660e01b81526004016000604051808303818588803b158015609957600080fd5b505af115801560ac573d6000803e3d6000fd5b505050505056fea26469706673582212209dedf2709fe99e106bcab9ecb8bad9e4a7d581d9f5767f15e17f81dc8b32957564736f6c634300080f0033";

type HackDOSKingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HackDOSKingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HackDOSKing__factory extends ContractFactory {
  constructor(...args: HackDOSKingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _dosKingAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HackDOSKing> {
    return super.deploy(
      _dosKingAddress,
      overrides || {}
    ) as Promise<HackDOSKing>;
  }
  override getDeployTransaction(
    _dosKingAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_dosKingAddress, overrides || {});
  }
  override attach(address: string): HackDOSKing {
    return super.attach(address) as HackDOSKing;
  }
  override connect(signer: Signer): HackDOSKing__factory {
    return super.connect(signer) as HackDOSKing__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HackDOSKingInterface {
    return new utils.Interface(_abi) as HackDOSKingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HackDOSKing {
    return new Contract(address, _abi, signerOrProvider) as HackDOSKing;
  }
}

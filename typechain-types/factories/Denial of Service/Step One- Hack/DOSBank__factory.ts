/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DOSBank,
  DOSBankInterface,
} from "../../../Denial of Service/Step One- Hack/DOSBank";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "payInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060805161059161005f600039600060b101526105916000f3fe6080604052600436106100345760003560e01c806327e235e314610039578063a15a211c14610076578063d0e30db01461008d575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610391565b610097565b60405161006d91906103d7565b60405180910390f35b34801561008257600080fd5b5061008b6100af565b005b61009561021f565b005b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461010757600080fd5b60005b60018054905081101561021c5760006001828154811061012d5761012c6103f2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1666038d7ea4c6800060405161018290610452565b60006040518083038185875af1925050503d80600081146101bf576040519150601f19603f3d011682016040523d82523d6000602084013e6101c4565b606091505b5050905080610208576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ff906104c4565b60405180910390fd5b50808061021490610513565b91505061010a565b50565b670de0b6b3a7640000341461023357600080fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461027e57600080fd5b670de0b6b3a76400006000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035e82610333565b9050919050565b61036e81610353565b811461037957600080fd5b50565b60008135905061038b81610365565b92915050565b6000602082840312156103a7576103a661032e565b5b60006103b58482850161037c565b91505092915050565b6000819050919050565b6103d1816103be565b82525050565b60006020820190506103ec60008301846103c8565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b50565b600061043c600083610421565b91506104478261042c565b600082019050919050565b600061045d8261042f565b9150819050919050565b600082825260208201905092915050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b60006104ae601483610467565b91506104b982610478565b602082019050919050565b600060208201905081810360008301526104dd816104a1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061051e826103be565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036105505761054f6104e4565b5b60018201905091905056fea26469706673582212204b5c9b8255ae80a401c628aabeaa913df76539f6f9ef1c0a8b2dd14c7cc59bd764736f6c634300080f0033";

type DOSBankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DOSBankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DOSBank__factory extends ContractFactory {
  constructor(...args: DOSBankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DOSBank> {
    return super.deploy(overrides || {}) as Promise<DOSBank>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DOSBank {
    return super.attach(address) as DOSBank;
  }
  override connect(signer: Signer): DOSBank__factory {
    return super.connect(signer) as DOSBank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DOSBankInterface {
    return new utils.Interface(_abi) as DOSBankInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DOSBank {
    return new Contract(address, _abi, signerOrProvider) as DOSBank;
  }
}

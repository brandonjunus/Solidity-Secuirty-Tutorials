/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UpgradedDOSBank,
  UpgradedDOSBankInterface,
} from "../../../Denial of Service/Step Two- Defend/UpgradedDOSBank";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "interestAccrued",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060805161063161005d600039600050506106316000f3fe6080604052600436106100495760003560e01c806263750c1461004e57806327e235e3146100655780633abb7a49146100a2578063a15a211c146100df578063d0e30db0146100f6575b600080fd5b34801561005a57600080fd5b50610063610100565b005b34801561007157600080fd5b5061008c60048036038101906100879190610458565b6101f5565b604051610099919061049e565b60405180910390f35b3480156100ae57600080fd5b506100c960048036038101906100c49190610458565b61020d565b6040516100d6919061049e565b60405180910390f35b3480156100eb57600080fd5b506100f4610225565b005b6100fe6102e6565b005b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16816040516101ad906104ea565b60006040518083038185875af1925050503d80600081146101ea576040519150601f19603f3d011682016040523d82523d6000602084013e6101ef565b606091505b50505050565b60006020528060005260406000206000915090505481565b60016020528060005260406000206000915090505481565b60005b6002805490508110156102e35766038d7ea4c680006001600060028481548110610255576102546104ff565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102c9919061055d565b9250508190555080806102db906105b3565b915050610228565b50565b670de0b6b3a764000034146102fa57600080fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461034557600080fd5b670de0b6b3a76400006000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610425826103fa565b9050919050565b6104358161041a565b811461044057600080fd5b50565b6000813590506104528161042c565b92915050565b60006020828403121561046e5761046d6103f5565b5b600061047c84828501610443565b91505092915050565b6000819050919050565b61049881610485565b82525050565b60006020820190506104b3600083018461048f565b92915050565b600081905092915050565b50565b60006104d46000836104b9565b91506104df826104c4565b600082019050919050565b60006104f5826104c7565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061056882610485565b915061057383610485565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156105a8576105a761052e565b5b828201905092915050565b60006105be82610485565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036105f0576105ef61052e565b5b60018201905091905056fea26469706673582212208e29265bbf5938553987419e0dfaddd4b058ff6a6dc4e4b8d65c2b0e31b63b4064736f6c634300080f0033";

type UpgradedDOSBankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradedDOSBankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradedDOSBank__factory extends ContractFactory {
  constructor(...args: UpgradedDOSBankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UpgradedDOSBank> {
    return super.deploy(overrides || {}) as Promise<UpgradedDOSBank>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UpgradedDOSBank {
    return super.attach(address) as UpgradedDOSBank;
  }
  override connect(signer: Signer): UpgradedDOSBank__factory {
    return super.connect(signer) as UpgradedDOSBank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradedDOSBankInterface {
    return new utils.Interface(_abi) as UpgradedDOSBankInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradedDOSBank {
    return new Contract(address, _abi, signerOrProvider) as UpgradedDOSBank;
  }
}

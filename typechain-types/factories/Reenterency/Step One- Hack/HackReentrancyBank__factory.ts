/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  HackReentrancyBank,
  HackReentrancyBankInterface,
} from "../../../Reenterency/Step One- Hack/HackReentrancyBank";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_bankAddress",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "hackContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260405161017f38038061017f833981810160405281019061002591906100ce565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100fb565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009b82610070565b9050919050565b6100ab81610090565b81146100b657600080fd5b50565b6000815190506100c8816100a2565b92915050565b6000602082840312156100e4576100e361006b565b5b60006100f2848285016100b9565b91505092915050565b6076806101096000396000f3fe608060405260043610601f5760003560e01c80637ca2474e14602a576025565b36602557005b600080fd5b348015603557600080fd5b50603c603e565b005b56fea26469706673582212201bde71cf236e5b5a3a927056572fc3eacd727fba8103ae56c6eb698f73259b5b64736f6c634300080f0033";

type HackReentrancyBankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HackReentrancyBankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HackReentrancyBank__factory extends ContractFactory {
  constructor(...args: HackReentrancyBankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _bankAddress: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<HackReentrancyBank> {
    return super.deploy(
      _bankAddress,
      overrides || {}
    ) as Promise<HackReentrancyBank>;
  }
  override getDeployTransaction(
    _bankAddress: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_bankAddress, overrides || {});
  }
  override attach(address: string): HackReentrancyBank {
    return super.attach(address) as HackReentrancyBank;
  }
  override connect(signer: Signer): HackReentrancyBank__factory {
    return super.connect(signer) as HackReentrancyBank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HackReentrancyBankInterface {
    return new utils.Interface(_abi) as HackReentrancyBankInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HackReentrancyBank {
    return new Contract(address, _abi, signerOrProvider) as HackReentrancyBank;
  }
}

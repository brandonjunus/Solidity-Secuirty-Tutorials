/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { HackBank, HackBankInterface } from "../../Reenterency/HackBank";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_contractAddress",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052604051610200380380610200833981810160405281019061002591906100ce565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100fb565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009b82610070565b9050919050565b6100ab81610090565b81146100b657600080fd5b50565b6000815190506100c8816100a2565b92915050565b6000602082840312156100e4576100e361006b565b5b60006100f2848285016100b9565b91505092915050565b60f7806101096000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063f6b4dfb414602d575b600080fd5b60336047565b604051603e919060a8565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000609482606b565b9050919050565b60a281608b565b82525050565b600060208201905060bb6000830184609b565b9291505056fea2646970667358221220f649872d6eb57c9cac98ebcf9d23e98424f7c8b4a0ce85d6d9ae957f6f8d57a664736f6c634300080f0033";

type HackBankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HackBankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HackBank__factory extends ContractFactory {
  constructor(...args: HackBankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _contractAddress: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<HackBank> {
    return super.deploy(_contractAddress, overrides || {}) as Promise<HackBank>;
  }
  override getDeployTransaction(
    _contractAddress: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_contractAddress, overrides || {});
  }
  override attach(address: string): HackBank {
    return super.attach(address) as HackBank;
  }
  override connect(signer: Signer): HackBank__factory {
    return super.connect(signer) as HackBank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HackBankInterface {
    return new utils.Interface(_abi) as HackBankInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HackBank {
    return new Contract(address, _abi, signerOrProvider) as HackBank;
  }
}
